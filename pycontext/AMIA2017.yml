- "Lex\tType\tRegex\tDirection": "no\tDEFINITE_NEGATED_EXISTENCE\t\tbidirectional"
- "Lex\tType\tRegex\tDirection": "without\tDEFINITE_NEGATED_EXISTENCE\t\tbidirectional"
- "Lex\tType\tRegex\tDirection": "nil\tDEFINITE_NEGATED_EXISTENCE\t\tbidirectional"
- "Lex\tType\tRegex\tDirection": "not\tDEFINITE_NEGATED_EXISTENCE\t\tbidirectional"
- "Lex\tType\tRegex\tDirection": "n't\tDEFINITE_NEGATED_EXISTENCE\t\tbidirectional"
- "Lex\tType\tRegex\tDirection": "never\tDEFINITE_NEGATED_EXISTENCE\t\tbidirectional"
- "Lex\tType\tRegex\tDirection": "none\tDEFINITE_NEGATED_EXISTENCE\t\tbidirectional"
- "Lex\tType\tRegex\tDirection": "neith\tDEFINITE_NEGATED_EXISTENCE\t\tbidirectional"
- "Lex\tType\tRegex\tDirection": "nor\tDEFINITE_NEGATED_EXISTENCE\t\tbidirectional"
- "Lex\tType\tRegex\tDirection": "denied\tDEFINITE_NEGATED_EXISTENCE\t\tforward"
- "Lex\tType\tRegex\tDirection": "denies\tDEFINITE_NEGATED_EXISTENCE\t\tforward"
- "Lex\tType\tRegex\tDirection": "deny\tDEFINITE_NEGATED_EXISTENCE\t\tforward"
- "Lex\tType\tRegex\tDirection": "denying\tDEFINITE_NEGATED_EXISTENCE\t\tforward"
- "Lex\tType\tRegex\tDirection": "reject\tDEFINITE_NEGATED_EXISTENCE\treject*\tforward"
- "Lex\tType\tRegex\tDirection": "subside\tDEFINITE_NEGATED_EXISTENCE\tsubsid*\tforward"
- "Lex\tType\tRegex\tDirection": "retract\tDEFINITE_NEGATED_EXISTENCE\tretract*\tforward"
- "Lex\tType\tRegex\tDirection": "non\tDEFINITE_NEGATED_EXISTENCE\t\tforward"
- "Lex\tType\tRegex\tDirection": "after\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "although\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "as\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "because\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "before\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "even if\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "even though\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "if\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "in order that\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "once\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "provided that\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "rather than\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "since\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "so that\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "than\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "that\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "though\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "unless\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "until\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "when\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "whenever\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "where\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "whereas\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "wherever\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "whether\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "while\tCONJ\t\tterminate"
- "Lex\tType\tRegex\tDirection": "why\tCONJ\t\tterminate"
